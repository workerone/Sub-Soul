<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="IMG_Iconos.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="IMG_Iconos.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADc
        CwAAAk1TRnQBSQFMAgEBAwEAAVgBAAFYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AEwADBwEJAxABFgMTARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEwEa
        AxMBGgMTARoDEwEaAxMBGgMQARYDBwEJBwABAQMGAQgDDAEQAxEBFwMTARoDEgEZAxEBFwMQARUDDQER
        AwoBDQMHAQoDBAEGAwIBAwMAAQEIAAMKBA4BEwMSARkDEgEZAxABFgMNARIDCwEPAwoBDgMNAREDEAEV
        AxIBGQMSARkDDwEUAwoBDkQAAw0BEgNRAaABWQJcAckBWQJcAckBWQJcAckBWQJcAckBWQJcAckBWQJc
        AckBWQJcAckBWQJcAckBWQJcAckBWQJcAckBWQJcAckBWQJcAckDUQGgAw0BEgQAAwEBAgMLAQ8DFgQf
        AS0DPAFmAVkBXAFZAcwDNAFVAx0BKQMYASIDEwEaAw4BEwMJAQwDBAEGAwABAQgAAxQBHAMbASYDOwFk
        AlcBXAHMAzoBYQMaASQDFQEdAxQBGwMYASEDOQFgAlcBXAHMAzsBZAMcAScDFAEcSAABVgJYAcEBrwH0
        Av8BoQHyAv8BoAHxAv8BngHxAf4B/wGcAfAB/QH/AZsB7wH9Af8BmQHuAfwB/wGXAe0B+wH/AZUB7QH7
        Af8BkgHsAfoB/wGQAeoB+QH/AZYB7AH6Af8BVgJYAcEUAAMuAUgBWQFcAVkBzAFWAWgBVQHoAVkBWwFZ
        AcQDHQEpJAADLgFIAlcBXAHMAgoB2AH/AlcBXAHMAy4BSAgAAy4BSAJXAVwBzAIKAdgB/wJXAVwBzAMu
        AUhMAAFWAlgBuwGhAfIC/wGHAe0B/gH/AYYB7AH9Af8BhQHsAf0B/wGEAesB/AH/AYIB6gH7Af8BgQHp
        AfoB/wF0AecB+AH/AXMB5gH3Af8BcQHlAfYB/wFwAeQB9QH/AYoB6QH4Af8BVgJYAbsQAAMuAUgBWQFc
        AVkBzAFDAYMBPwH0ARkBzQEIAf8BSwFyAUkB7wFWAVgBVgG7AxQBGyAAAlcBXAHMAgoB0AH/AgoB0AH/
        AgoB0AH/AlcBXAHMAy4BSAMuAUgCVwFcAcwCCgHQAf8CCgHQAf8CCgHQAf8CVwFcAcxMAAFWAlgBuQGg
        AfEC/wFsAbsBzAH/AWwBuwHMAf8BbAHMAdkB/wFqAboBywH/AWgB0gHeAf8BbQHQAeEB/wFzAeYB9wH/
        AXEB5QH2Af8BcAHkAfUB/wFuAeMB9AH/AYUB5wH2Af8BVgJYAbkMAAMuAUgBWQFcAVkBzAFIAY0BRQH2
        AR4BwwENAf8BLgHMAR0B/wEdAcIBDAH/AVIBaQFRAeoDVAGuAwwBEBwAAy4BSAJXAVwBzAIKAcQB/wIK
        AcQB/wIKAcQB/wJXAVwBzAJXAVwBzAIKAcQB/wIKAcQB/wIKAcQB/wJXAVwBzAMuAUhMAAFVAlcBtwGe
        AfEB/gH/AWwB3QHlAf8BbAHdAeUB/wFqAdwB5QH/AWgB2wHkAf8BZQHaAeQB/wFqAd8B7QH/AXEB5QH2
        Af8BcAHkAfUB/wFuAeMB9AH/AWoB4AHxAf8BcQHjAfMB/wFVAlcBtwgAAy4BSAFZAVwBWQHMAV8BqAFH
        AfkBKAG8ARcB/wFbAZwBQQH4AVkBXAFZAcwBSwGAAUEB8wEhAbgBEAH/AVYBYgFVAeQDUAGeAwYBCBwA
        Ay4BSAJXAV4BzAIKAbgB/wIKAbgB/wIKAbgB/wIKAbgB/wIKAbgB/wIKAbgB/wJXAV4BzAMuAUhQAANV
        AbUBnQHwAf0B/wFsAbsBzAH/AWoBugHLAf8BaAG5AcoB/wFlAckB1gH/AWIBtgHHAf8BXgG1AcYB/wFZ
        AbIBwwH/AU8BvgHOAf8BSgG7AcwB/wFKAbMBxAH/AWkB4AHwAf8DVQG1CAABWQFcAVkBzAFeAbABTQH6
        AU4B0AE9Af8BXgG8AUUB/AFZAVwBWQHMAz8BbQFYAVsBWAHLAT4BkQE8AfgBJwGyARYB/wFXAWABVwHf
        A0oBjAMBAQIcAAMuAUgCVwFeAcwCDgGvAf8CCgGsAf8CCgGsAf8CCgGsAf8CVwFeAcwDLgFIVAADVgGz
        AZsB7wH9Af8BagHcAeUB/wFoAdsB5AH/AWUB2gHkAf8BYgHYAeMB/wFeAdcB4gH/AWUB3AHrAf8BbgHj
        AfQB/wFqAeAB8QH/AWUB2wHsAf8BXwHXAegB/wFkAd0B7gH/A1YBswgAAy4BSAFZAVwBWQHMAV4BygFR
        Af0BWQFcAVkBzAMuAUgEAAMwAUwBWgFdAVoB0wEzAZYBLQH7ATcBmgEmAf4BXAFhAVwB2gNEAXscAAMu
        AUgCVwFeAcwCHgG0Af8CCgGiAf8CCgGiAf8CDQGlAf8CVwFeAcwDLgFIVAABVQJWAbEBmQHuAfwB/wFo
        AbkBygH/AWUBuAHJAf8BYgHHAdUB/wFeAbUBxgH/AVkBzAHZAf8BXwHIAdkB/wFqAeAB8QH/AWUB2wHs
        Af8BXwHXAegB/wFcAdUB5gH/AWQB3QHuAf8BVQJWAbEMAAMuAUgBWQFcAVkBzAMuAUgMAAM9AWkBWgFe
        AVoB2AFXAboBRgH+AUoBuQFAAf0BWwFgAVsB1gM7AWMUAAMuAUgCVwFeAcwCTAHbAf8CJwG3Af8CNgHG
        Af8CKgG6Af8CDgGfAf8CFwGoAf8CVwFeAcwDLgFIUAADVAGvAZcB7QH7Af8BdAHnAfgB/wFzAeYB9wH/
        AXEB5QH2Af8BcAHkAfUB/wFuAeMB9AH/AWoB4AHxAf8BZQHbAewB/wFfAdcB6AH/ASwBrgG/Af8BLAGu
        Ab8B/wEsAa4BvwH/AVcCWQG/JwABAQNIAYUBWgFhAVoB3gFWAdgBRQH/AU0BpgFNAfoBWQFdAVkB0gMw
        AUwMAAMuAUgCVwFfAcwCYAHvAf8CLwG+Af8CVwHmAf8CVwFfAcwCVwFfAcwCSAHXAf8CLwG+Af8CPgHN
        Af8CVwFfAcwDLgFITAADVAGuAZUB7QH7Af8BcwHmAfcB/wFxAeUB9gH/AXAB5AH1Af8BbgHjAfQB/wFq
        AeAB8QH/AWUB2wHsAf8BXwHXAegB/wFcAdUB5gH/AToBvAHNAf8BuwH2Av8DVAGuAykBPigAAwQBBgNQ
        AZ4BXgFsAVsB5QFgAeIBTwH/AV8BvgFfAfsBWQFcAVkBzAwAAlcBXwHMAm8B/gH/AkUB1AH/AmsB+gH/
        AlcBXwHMAy4BSAMuAUgCVwFfAcwCWwHqAf8CRQHUAf8CVQHkAf8CVwFfAcxMAAFTAlUBrQGcAe8B+wH/
        AY8B6wH5Af8BjQHqAfgB/wGKAekB+AH/AYUB5wH2Af8BcQHjAfMB/wFpAeAB8AH/AWQB3QHuAf8BZAHd
        Ae4B/wFCAcQB1QH/AVMCVQGtAygBPTAAAwwBEAFTAVUBUwGwAWwB7gFbAf8BWQFcAVkBzAMuAUgMAAMu
        AUgCVwFfAcwCcAL/AlcBXwHMAy4BSAgAAy4BSAJXAV8BzAJpAfgB/wJXAV8BzAMuAUhMAAFGAkcBgQFU
        AlYBqwFUAlYBqwFUAlYBqwFUAlYBqwFUAlYBqwFUAlYBqwFUAlYBqwFUAlYBqwFUAlYBqwFUAlYBqwMo
        ATw4AAMWAR8BWQFcAVkBzAMuAUgUAAMuAUgCVwFfAcwDLgFIEAADLgFIAlcBXwHMAy4BSP8A/wBOAAFC
        AU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAG/wQAAYABAQGAAQEEAAGAAQEBgAEB
        AgABgAEBAfABfwHBAYMCAAGAAQEB4AE/AcABAwIAAYABAQHAAR8BwAEDAgABgAEBAYABDwHgAQcCAAGA
        AQEBgAEHAfABDwIAAYABAQGCAQcB8AEPAgABgAEBAccBAwHgAQcCAAGAAQEB/wEBAcABAwIAAYABAQH/
        AYEBwAEDAgABgAEDAf8CwQGDAgABgAEHAf8C4wHHAgAG/wIABv8CAAs=
</value>
  </data>
</root>